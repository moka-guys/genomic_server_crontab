# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# Heartbeat
*/20 * * * * echo 'padam padam' 2>&1 | /usr/bin/logger -t Heartbeat
# Low space warning
0 * * * * FREE=$(df / --output=avail | tail -n 1 );FREEHR=$(df / --output=avail -h | tail -n 1); if [ $FREE -lt 15728631 ]; then echo "Less than 15GB space on genomics.viapath.co.uk / partition ("$FREEHR"B)"; fi | /usr/bin/logger -t root_freespace
# trendanalysis
#0 * * * * /usr/local/src/mokaguys/apps/trend_analysis/venv/bin/python /usr/local/src/mokaguys/apps/trend_analysis/read_qc_files.py; status=$?; if [ $status -ne 0 ]; then echo "trend analysis script failed to complete " $(date "+\%y/\%m/\%d \%H:\%M:\%S") | /usr/bin/logger -t trend_analysis_fail; else echo "successful completion of trend analysis script " $(date "+\%y/\%m/\%d \%H:\%M:\%S")| /usr/bin/logger -t trend_analysis_pass; fi
# genomics server download
0 * * * * docker run --rm -v /usr/local/src/mokaguys/logfiles:/mokaguys/logfiles -v /usr/local/src/mokaguys/dx_downloads:/mokaguys/dx_downloads -v /usr/local/src/mokaguys/.dnanexus_auth_token:/mokaguys/.dnanexus_auth_token -v /usr/local/src/mokaguys/.archerVM_pw:/mokaguys/.archerVM_pw genomics_server_download:v1.4.0 > /usr/local/src/mokaguys/logfiles/script_stdout/$(date "+\%Y\%m\%d_\%H\%M\%S").txt 2>&1; status=$?; if [ $status -ne 0 ]; then echo "Genomics server Archer script failed to complete " $(date "+\%y\%m\%d_\%H\%M\%S")|/usr/bin/logger -t genomics_server_fail; else echo "successful completion of Genomics server Archer script " $(date "+\%y\%m\%d_\%H\%M\%S")|/usr/bin/logger -t genomics_server_pass; fi
# archer archiving
0 7 * * Mon docker run --rm -v /usr/local/src/mokaguys/logfiles:/mokaguys/logfiles -v /usr/local/src/mokaguys/dx_downloads:/mokaguys/dx_downloads -v /usr/local/src/mokaguys/.dnanexus_auth_token:/mokaguys/.dnanexus_auth_token -v /usr/local/src/mokaguys/.archerVM_pw:/mokaguys/.archerVM_pw archer_archiving:v1.0.0 > /usr/local/src/mokaguys/logfiles/script_stdout/$(date "+\%Y\%m\%d_\%H\%M\%S").txt 2>&1; status=$?; if [ $status -ne 0 ]; then echo "Archer archiving script failed to complete " $(date "+\%y\%m\%d_\%H\%M\%S")|/usr/bin/logger -t archer_archive_fail; else echo "successful completion of Archer archiving script " $(date "+\%y\%m\%d_\%H\%M\%S")|/usr/bin/logger -t archer_archive_pass; fi
